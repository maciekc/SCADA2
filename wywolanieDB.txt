//        getDBData.getStateSpaceData("LEVEL_1", "2017-10-20 14:00:00", "2017-10-29 20:00:00")
//                .subscribe(v -> System.out.println("v : " + new Gson().toJson(v)));
//
//        getDBData.getStateSpaces()
//                .subscribe(v -> System.out.println("v : " + new Gson().toJson(v)));

//        Andon andon = new Andon(1,"LEVEL_3", "LEVEL_3_MAX", 120., "2017-10-28 13:43:00");
//        rx.Observable.concat(insertDataToDB.insertAndon(andon), insertDataToDB.insertAndonToHistory(andon, "ANDON"))
//                .subscribe(v -> System.out.println("add new andon"));

//        getDBData.insertAndon(andon)
//                .subscribe(v -> System.out.println("add new andon"));
//
//        getDBData.insertHistoryRecord(new Andon(1,"LEVEL_3", "LEVEL_3_MAX", 120., "2017-10-28 13:43:00"), "ANDON")
//                .subscribe(v -> System.out.println("add new history record"));

        getDBData.getAndonData("2017-10-28 13:00:00", "2017-10-28 14:00:00")
                .subscribe(v -> System.out.println("v : " + new Gson().toJson(v)));

//        Work work = new Work(1,"LEVEL_3", 57., "2017-10-28 15:43:00");
//        rx.Observable.concat(insertDataToDB.insertWork(work), insertDataToDB.insertWorkToHistory(work, "WORK"))
//                .subscribe(v -> System.out.println("add new work"));

//        ChangeParameterValue cpv= new ChangeParameterValue(1,"SET_POINT", 25., "2017-10-28 16:43:00");
//        rx.Observable.concat(insertDataToDB.insertChangeParameterValue(cpv), insertDataToDB.insertChangeParameterValueToHistory(cpv, "CHANGE_PARAMETER_VALUE"))
//                .subscribe(v -> System.out.println("add new cpv"));
//
//        getDBData.getChangeParameterValueData()
//                .subscribe(v -> System.out.println("CPV : " + new Gson().toJson(v)));

//        final Limit limit = new Limit(1, "LEVEL_1_MIN", "Poziom 1 min", "LEVEL_1", 2.5, -1);
//        updateDataInDB.updateLimit(limit)
//                .subscribe(v -> System.out.println("update all limit : " + new Gson().toJson(v)));
//
//        updateDataInDB.updateLimit("LEVEL_2_MIN", 2.9)
//                .subscribe(v -> System.out.println("update limit value : " + new Gson().toJson(v)));

//        final Controller controller = new Controller(1, "VALVE_1", "AUTOMATIC_MODE", 21., "2017-10-29 11:05:00");
//        rx.Observable.concat(insertDataToDB.insertController(controller), insertDataToDB.insertControllerToHistory(controller))
//                .subscribe(v -> System.out.println("add new controller"));

        getDBData.getControllerData()
                .subscribe(v -> System.out.println("controller data : " + new Gson().toJson(v)));

        getDBData.getNotifications()
                .subscribe(v -> System.out.println("not : " + new Gson().toJson(v)));